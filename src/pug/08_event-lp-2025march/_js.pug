script.
  // モーダルを開くボタンのクリックイベント
  $('.modal-open-liff-qr').click(function() {
    $('.modal,.bg-modal').show();
  });

  // モーダルを閉じるボタンと背景のクリックイベント
  $('.modal-close,.bg-modal').click(function() {
    $('.modal,.bg-modal').hide();
  });

script.
  // 関数: 各セクション内の .lp-25mar-events-main-section-levels-child-description の高さを揃える
  function setEqualHeight() {
    // .lp-25mar-events-main-section-levels が複数あるので、それぞれ処理を行う
    $('.lp-25mar-events-main-section-levels').each(function() {
      // 現在のセクション内の .lp-25mar-events-main-section-levels-child-description を取得
      const descriptions = $(this).find('.lp-25mar-events-main-section-levels-child-description');
      
      // 高さをリセットして、リサイズ時のレイアウト崩れを防ぐ
      descriptions.height('auto');

      // 各 .lp-25mar-events-main-section-levels-child-description の高さを取得し、最大値を計算
      const maxHeight = Math.max(...descriptions.map(function() {
        return $(this).outerHeight(); // padding & border を含む高さを取得
      }).get());

      // 取得した最大値をすべての .lp-25mar-events-main-section-levels-child-description に適用
      descriptions.height(maxHeight);
    });
  }

    // ページの読み込みが完了したら高さを揃える
  $(document).ready(setEqualHeight);

  // ウィンドウのサイズ変更時に高さを再計算し、適用する
  $(window).on('resize', setEqualHeight);
  
  $(document).ready(function () {
    // モーダルを閉じるボタンと背景のクリックイベント
    $('.modal-close,.bg-modal').click(function() {
      $('.modal,.bg-modal').hide();
    });
  $('.lp-25mar-events-main-section-levels').each(function() {
    // 各 .lp-25mar-events-main-section-levels 内の .lp-25mar-events-main-section-levels-child-description の最大高さを求める
    const maxHeight = Math.max(...$(this).find('.lp-25mar-events-main-section-levels-child-description').map(function() {
      return $(this).outerHeight();
    }).get());

    // 各 .lp-25mar-events-main-section-levels 内の .lp-25mar-events-main-section-levels-child-description に最大高さを適用
    $(this).find('.lp-25mar-events-main-section-levels-child-description').height(maxHeight);
  });


    // スクロールイベントで固定CTAボタンの表示を制御
    $(window).on("scroll", function () {
      const scrollPosition = $(window).scrollTop(); // 現在のスクロール位置を取得

      if (scrollPosition > 500) {
        $('.fixed-cta-button').fadeIn();
      } else {
        $('.fixed-cta-button').fadeOut();
      }

      // セクションのスクロールイベントを処理する関数
      function handleScrollEvent(sectionSelector, linkSelector) {
        $(sectionSelector).each(function () {
          const $section = $(this); // 現在ループ中のセクションを jQuery オブジェクトとして取得
          const sectionTop = $section.offset().top; // セクションの上端の位置（ページ全体に対する座標）
          const sectionHeight = $section.outerHeight(); // セクションの高さ
          const sectionId = $section.attr("id"); // セクションの ID を取得

          console.log(`Checking section: ${sectionId}, Top: ${sectionTop}, Scroll: ${scrollPosition}`);

          // スクロール位置がセクション内にあるかチェック
          if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
            $(linkSelector).removeClass("active"); // すべてのリンクから 'active' クラスを削除
            $(`${linkSelector}[href="#${sectionId}"]`).addClass("active"); // 該当するリンクに 'active' クラスを付与

            console.log(`Activated link for: ${sectionId}`); // どのセクションのリンクがアクティブになったか確認
          }
        });
      }

      // PC用ナビゲーション
      handleScrollEvent(".lp-25mar-events-main-section-levels", ".lp-25mar-events-sub-left-subject-wrap-level");

      // スマホ用ナビゲーション
      handleScrollEvent(".lp-25mar-events-main-section", ".lp-25mar-events-spnavi-child");
    });

    // inview を一括適用
   const inviewElements = $(".lp-25mar-feature-grid-child-img, \
  .lp-25mar-events-main-section-levels-child, \
  .lp-25mar-events-main-section-levels-child-img, \
  .lp-25mar-intro-title, \
  .lp-25mar-fv-title, \
  .lp-25mar-fvpc-grid-child, \
  .lp-25mar-events-sub, \
  .lp-25mar-fvsp-title-img img, \
  .lp-25mar-intro-title-top-sp,\
  .lp-25mar-fvsp-title-img, \
  .lp-25mar-intro-title-main-sp");
    inviewElements.on("inview", function (event, isInView) {
      if (isInView) {
        $(this).addClass("inview");
      }
    });
  });